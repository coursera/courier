@args org.coursera.courier.tslite.TSSyntax.TSUnionSyntax union
@import org.coursera.courier.tslite.TSSyntax.TSUnionSyntax
@import org.coursera.courier.tslite.TSSyntax.TSUnionMemberSyntax

@union.imports()

@union.docString()
export type @union.typeName() = @union.memberUnionTypeExpression();
@if(union.requiresCompanionModule()) {
  export module @union.typeName() {
    export interface @union.memberBaseTypeName() {
      [key: string]: @union.unionTypeExpression();
    }

    @for(TSUnionMemberSyntax member: union.members()) {
      export interface @member.unionMemberTypeName() extends @union.memberBaseTypeName() {
        "@member.unionMemberKey()": @member.typeName();
      }
    }
    export function unpack(union: @union.typeName()) {
      return {
        @for(TSUnionMemberSyntax member: union.members()) {
          @member.unpackString(): union["@member.unionMemberKey()"] as @(member.typeName())@if(!member_isLast){,}
        }
      };
    }
  }
}
